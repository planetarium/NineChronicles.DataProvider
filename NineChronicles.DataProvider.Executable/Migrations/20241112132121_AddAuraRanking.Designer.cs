// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NineChronicles.DataProvider.Store;

#nullable disable

namespace NineChronicles.DataProvider.Executable.Migrations
{
    [DbContext(typeof(NineChroniclesContext))]
    [Migration("20241112132121_AddAuraRanking")]
    partial class AddAuraRanking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AbilityRankingModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int?>("Cp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("AbilityRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ActivateCollectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress", "CollectionId")
                        .IsUnique();

                    b.ToTable("ActivateCollections");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossChallengeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EndFloor")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<long>("Season")
                        .HasColumnType("bigint");

                    b.Property<int>("StartFloor")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("TotalPoint")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedApPotion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("AdventureBossChallenge");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossClaimRewardModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("ClaimedSeason")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("NcgReward")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RewardData")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("AdventureBossClaimReward");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossRushModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EndFloor")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("TotalPoint")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedApPotion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("AdventureBossRush");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossSeasonModel", b =>
                {
                    b.Property<long>("Season")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BossId")
                        .HasColumnType("int");

                    b.Property<long>("ClaimableBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("EndBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("FixedRewardData")
                        .HasColumnType("longtext");

                    b.Property<long>("NextSeasonBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RaffleReward")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RaffleWinnerAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RandomRewardData")
                        .HasColumnType("longtext");

                    b.Property<long>("StartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Season");

                    b.HasIndex("RaffleWinnerAddress");

                    b.ToTable("AdventureBossSeason");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossUnlockFloorModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("Season")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("TotalUsedGoldenDust")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalUsedNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UnlockFloor")
                        .HasColumnType("int");

                    b.Property<long>("UsedGoldenDust")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UsedNcg")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("AdventureBossUnlockFloor");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossWantedModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Bounty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalBounty")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("AdventureBossWanted");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AgentModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Address");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ApprovePledgeModel", b =>
                {
                    b.Property<string>("TxId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PatronAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Signer")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TxId");

                    b.HasIndex("Date");

                    b.ToTable("ApprovePledges");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AuraSummonFailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("SummonCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("AuraSummonFails");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AuraSummonModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("SummonCount")
                        .HasColumnType("int");

                    b.Property<string>("SummonResult")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("AuraSummons");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AvatarModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int?>("Cp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Address");

                    b.HasIndex("AgentAddress");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EnemyAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("MedalCount")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int>("TicketCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Victory")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("BattleArenas");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaRankingModel", b =>
                {
                    b.Property<long>("AdditionalTicketPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ArenaType")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("int");

                    b.Property<int?>("Cp")
                        .HasColumnType("int");

                    b.Property<long>("EndBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("EntranceFee")
                        .HasColumnType("bigint");

                    b.Property<int>("LossCount")
                        .HasColumnType("int");

                    b.Property<int>("MedalCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PurchasedTicketCount")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int>("RequiredMedalCount")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<long>("StartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("Ticket")
                        .HasColumnType("int");

                    b.Property<long>("TicketPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketResetCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.Property<int>("WinCount")
                        .HasColumnType("int");

                    b.ToTable("BattleArenaRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleGrandFinaleModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnemyAvatarAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GrandFinaleId")
                        .HasColumnType("int");

                    b.Property<int>("GrandFinaleScore")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Victory")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("BattleGrandFinales");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BlockModel", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("Difficulty")
                        .HasColumnType("bigint");

                    b.Property<long>("Index")
                        .HasColumnType("bigint");

                    b.Property<string>("Miner")
                        .HasColumnType("longtext");

                    b.Property<string>("Nonce")
                        .HasColumnType("longtext");

                    b.Property<string>("PreviousHash")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProtocolVersion")
                        .HasColumnType("int");

                    b.Property<string>("PublicKey")
                        .HasColumnType("longtext");

                    b.Property<string>("StateRootHash")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("TotalDifficulty")
                        .HasColumnType("bigint");

                    b.Property<int?>("TxCount")
                        .HasColumnType("int");

                    b.Property<string>("TxHash")
                        .HasColumnType("longtext");

                    b.HasKey("Hash");

                    b.HasIndex("Date");

                    b.HasIndex("Index");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ClaimStakeRewardModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ApPotionCount")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("ClaimRewardAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<long>("ClaimStakeEndBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("ClaimStakeStartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("HourGlassCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("Date");

                    b.ToTable("ClaimStakeRewards");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationConsumableModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("CombinationConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationEquipmentModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("OptionCount")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<bool>("SkillContains")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<int?>("SubRecipeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("CombinationEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.CustomEquipmentCraftCountModel", b =>
                {
                    b.Property<int>("IconId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.HasKey("IconId");

                    b.ToTable("CustomEquipmentCraftCount");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.CustomEquipmentCraftModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AdditionalCost")
                        .HasColumnType("longtext");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("Circle")
                        .HasColumnType("int");

                    b.Property<bool>("CraftWithRandom")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("EquipmentItemId")
                        .HasColumnType("int");

                    b.Property<bool>("HasRandomOnlyIcon")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<decimal>("NcgCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<int>("Scroll")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("TotalCP")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("CustomEquipmentCraft");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.RapidCombinationModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("HourglassCount")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("RapidCombinations");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.UnlockCombinationSlotModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CrystalCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("MaterialCosts")
                        .HasColumnType("longtext");

                    b.Property<decimal>("NcgCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UnlockCombinationSlot");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CraftRankingModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("CraftCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("CraftRankings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.DailyMetricModel", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("ApUsage")
                        .HasColumnType("int");

                    b.Property<decimal?>("ArenaNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("AuraSummonCount")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingConsumableCount")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingConsumableUsers")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingEquipmentCount")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingEquipmentUsers")
                        .HasColumnType("int");

                    b.Property<int?>("DailyNew")
                        .HasColumnType("int");

                    b.Property<int?>("Dau")
                        .HasColumnType("int");

                    b.Property<int?>("EnhanceCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("EnhanceNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("EnhanceUsers")
                        .HasColumnType("int");

                    b.Property<decimal?>("EventTicketNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("HackAndSlashCount")
                        .HasColumnType("int");

                    b.Property<int?>("HackAndSlashUsers")
                        .HasColumnType("int");

                    b.Property<int?>("HourglassUsage")
                        .HasColumnType("int");

                    b.Property<decimal?>("NcgTrade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("RuneNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("RuneSlotNcg")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("RuneSummonCount")
                        .HasColumnType("int");

                    b.Property<int?>("SweepCount")
                        .HasColumnType("int");

                    b.Property<int?>("SweepUsers")
                        .HasColumnType("int");

                    b.Property<int?>("TxCount")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.HasIndex("Date");

                    b.ToTable("DailyMetrics");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ItemId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingArmorModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRankingArmor");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingBeltModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRankingBelt");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingNecklaceModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRankingNecklace");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingRingModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRankingRing");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingWeaponModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("EquipmentRankingWeapon");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventConsumableItemCraftsModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EventConsumableItemRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("EventScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem1Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem1Id")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem2Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem2Id")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem3Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem3Id")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem4Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem4Id")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem5Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem5Id")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem6Count")
                        .HasColumnType("int");

                    b.Property<int>("RequiredItem6Id")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("EventConsumableItemCrafts");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventDungeonBattleModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CostumesCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EquipmentsCount")
                        .HasColumnType("int");

                    b.Property<int>("EventDungeonId")
                        .HasColumnType("int");

                    b.Property<int>("EventDungeonStageId")
                        .HasColumnType("int");

                    b.Property<int>("EventScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("FoodsCount")
                        .HasColumnType("int");

                    b.Property<int>("RemainingTickets")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem10Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem10Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem1Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem1Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem2Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem2Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem3Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem3Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem4Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem4Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem5Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem5Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem6Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem6Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem7Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem7Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem8Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem8Id")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem9Count")
                        .HasColumnType("int");

                    b.Property<int>("RewardItem9Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("EventDungeonBattles");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventMaterialItemCraftsModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EventMaterialItemRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("EventScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Material10Count")
                        .HasColumnType("int");

                    b.Property<int>("Material10Id")
                        .HasColumnType("int");

                    b.Property<int>("Material11Count")
                        .HasColumnType("int");

                    b.Property<int>("Material11Id")
                        .HasColumnType("int");

                    b.Property<int>("Material12Count")
                        .HasColumnType("int");

                    b.Property<int>("Material12Id")
                        .HasColumnType("int");

                    b.Property<int>("Material1Count")
                        .HasColumnType("int");

                    b.Property<int>("Material1Id")
                        .HasColumnType("int");

                    b.Property<int>("Material2Count")
                        .HasColumnType("int");

                    b.Property<int>("Material2Id")
                        .HasColumnType("int");

                    b.Property<int>("Material3Count")
                        .HasColumnType("int");

                    b.Property<int>("Material3Id")
                        .HasColumnType("int");

                    b.Property<int>("Material4Count")
                        .HasColumnType("int");

                    b.Property<int>("Material4Id")
                        .HasColumnType("int");

                    b.Property<int>("Material5Count")
                        .HasColumnType("int");

                    b.Property<int>("Material5Id")
                        .HasColumnType("int");

                    b.Property<int>("Material6Count")
                        .HasColumnType("int");

                    b.Property<int>("Material6Id")
                        .HasColumnType("int");

                    b.Property<int>("Material7Count")
                        .HasColumnType("int");

                    b.Property<int>("Material7Id")
                        .HasColumnType("int");

                    b.Property<int>("Material8Count")
                        .HasColumnType("int");

                    b.Property<int>("Material8Id")
                        .HasColumnType("int");

                    b.Property<int>("Material9Count")
                        .HasColumnType("int");

                    b.Property<int>("Material9Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("EventMaterialItemCrafts");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Grinding.GrindingModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Crystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentItemId")
                        .HasColumnType("longtext");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("int");

                    b.Property<string>("Materials")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("Grindings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("Mimisbrunnr")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("HackAndSlashes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashSweepModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ActionPoint")
                        .HasColumnType("int");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ApStoneCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CostumesCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EquipmentsCount")
                        .HasColumnType("int");

                    b.Property<bool>("Mimisbrunnr")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WorldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("HackAndSlashSweeps");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasRandomBuffModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("GachaCount")
                        .HasColumnType("int");

                    b.Property<int>("HasStageId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("HasRandomBuffs");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasWithRandomBuffModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("BuffId")
                        .HasColumnType("int");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("HasWithRandomBuffs");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementFailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EquipmentItemId")
                        .HasColumnType("longtext");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("GainedCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MaterialIdsCount")
                        .HasColumnType("int");

                    b.Property<string>("MaterialItemId")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("ItemEnhancementFails");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long?>("Exp")
                        .HasColumnType("bigint");

                    b.Property<int>("HammerCount")
                        .HasColumnType("int");

                    b.Property<long>("HammerExp")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MaterialId")
                        .HasColumnType("longtext");

                    b.Property<int>("MaterialIdsCount")
                        .HasColumnType("int");

                    b.Property<int?>("SheetId")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("ItemEnhancements");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.JoinArenaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ArenaRound")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("JoinArenas");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.MigrateMonsterCollectionModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("MigrationAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("MigrationStartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("StakeStartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("Date");

                    b.ToTable("MigrateMonsterCollections");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.PetEnhancementModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("BurntSoulStone")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ChangedLevel")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("OutputPetLevel")
                        .HasColumnType("int");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousPetLevel")
                        .HasColumnType("int");

                    b.Property<int>("TargetLevel")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("PetEnhancements");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RaiderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<long>("HighScore")
                        .HasColumnType("bigint");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseCount")
                        .HasColumnType("int");

                    b.Property<int>("RaidId")
                        .HasColumnType("int");

                    b.Property<long>("TotalScore")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("RaidId", "Address")
                        .IsUnique();

                    b.ToTable("Raiders");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Ranking.EquipmentRankingAuraModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnName("int");

                    b.Property<int?>("ArmorId")
                        .HasColumnName("int");

                    b.ToTable("EquipmentRankingAura");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ReplaceCombinationEquipmentMaterialModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ReplacedMaterialCount")
                        .HasColumnType("int");

                    b.Property<int>("ReplacedMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("ReplaceCombinationEquipmentMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RequestPledgeModel", b =>
                {
                    b.Property<string>("TxId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PledgeAgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("RefillMead")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TxSigner")
                        .HasColumnType("longtext");

                    b.HasKey("TxId");

                    b.HasIndex("Date");

                    b.ToTable("RequestPledges");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneEnhancementModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("BurntRune")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("OutputRuneLevel")
                        .HasColumnType("int");

                    b.Property<int?>("OutputRuneLevelBonus")
                        .HasColumnType("int");

                    b.Property<int>("PreviousRuneLevel")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousRuneLevelBonus")
                        .HasColumnType("int");

                    b.Property<int>("RuneId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("RuneEnhancements");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RunesAcquiredModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ActionType")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TickerType")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("AcquiredRune")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id", "ActionType", "TickerType");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.HasIndex("Id", "ActionType", "TickerType")
                        .IsUnique();

                    b.ToTable("RunesAcquired");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneSummonFailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("SummonCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("RuneSummonFails");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneSummonModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("SummonCount")
                        .HasColumnType("int");

                    b.Property<string>("SummonResult")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("RuneSummons");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopConsumableModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("MainStat")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.HasKey("ItemId");

                    b.ToTable("ShopConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopCostumeModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<bool>("Equipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.HasKey("ItemId");

                    b.ToTable("ShopCostumes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopEquipmentModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.Property<string>("UniqueStatType")
                        .HasColumnType("longtext");

                    b.HasKey("ItemId");

                    b.ToTable("ShopEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryConsumableModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("MainStat")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("Date");

                    b.ToTable("ShopHistoryConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryCostumeModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<bool>("Equipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("Date");

                    b.ToTable("ShopHistoryCostumes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryEquipmentModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.Property<string>("UniqueStatType")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("Date");

                    b.ToTable("ShopHistoryEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryFungibleAssetValueModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Ticker")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("Date");

                    b.ToTable("ShopHistoryFungibleAssetValues");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryMaterialModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.HasIndex("Date");

                    b.ToTable("ShopHistoryMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopMaterialModel", b =>
                {
                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.ToTable("ShopMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StageRankingModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("int");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("ClearedStageId")
                        .HasColumnType("int");

                    b.Property<int?>("Cp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.ToTable("StageRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StakeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("NewAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("NewStakeStartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long>("PrevStakeStartBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PreviousAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("RemainingNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("Date");

                    b.ToTable("Stakings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.TransactionModel", b =>
                {
                    b.Property<string>("TxId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ActionType")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Nonce")
                        .HasColumnType("bigint");

                    b.Property<string>("PublicKey")
                        .HasColumnType("longtext");

                    b.Property<string>("Signer")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedAddressesCount")
                        .HasColumnType("int");

                    b.HasKey("TxId");

                    b.HasIndex("Date");

                    b.HasIndex(new[] { "Date", "ActionType" }, "IDX_Date_ActionType");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.TransferAssetModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("longtext");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Recipient")
                        .HasColumnType("longtext");

                    b.Property<string>("Sender")
                        .HasColumnType("longtext");

                    b.Property<string>("TickerType")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TxId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.ToTable("TransferAssets");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockEquipmentRecipeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UnlockEquipmentRecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("UnlockEquipmentRecipes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockRuneSlotModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCRYSTAL")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("UnlockRuneSlots");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockWorldModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UnlockWorldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.HasIndex("Date");

                    b.ToTable("UnlockWorlds");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserConsumablesModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("MainStat")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<long?>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UserConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserCostumesModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Equipped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<long?>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UserCostumes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserCrystalsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CrystalBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.ToTable("UserCrystals");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserEquipmentsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("longtext");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("BuffSkillCount")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("longtext");

                    b.Property<long?>("RequiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("SetId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillsCount")
                        .HasColumnType("int");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradableId")
                        .HasColumnType("longtext");

                    b.Property<string>("UniqueStatType")
                        .HasColumnType("longtext");

                    b.ToTable("UserEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserMaterialsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ElementalType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemType")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UserMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserMonsterCollectionsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpiredBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonsterCollectionAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("ReceivedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("RewardLevel")
                        .HasColumnType("bigint");

                    b.Property<long?>("StartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.ToTable("UserMonsterCollections");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserNCGsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("NCGBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.ToTable("UserNCGs");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserRunesModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RuneBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Ticker")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UserRunes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserStakingsModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("BlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("CancellableBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReceivedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("StakeAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("StartedBlockIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("AgentAddress");

                    b.ToTable("UserStakings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.WorldBossRankingModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarName")
                        .HasColumnType("longtext");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<int>("HighScore")
                        .HasColumnType("int");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.ToTable("WorldBossRankings", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.WorldBossSeasonMigrationModel", b =>
                {
                    b.Property<int>("RaidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("MigratedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.HasKey("RaidId");

                    b.HasIndex("RaidId")
                        .IsUnique();

                    b.ToTable("WorldBossSeasonMigrationModels");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ActivateCollectionModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany("ActivateCollections")
                        .HasForeignKey("AvatarAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("NineChronicles.DataProvider.Store.Models.CollectionOptionModel", "Options", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<int?>("ActivateCollectionId")
                                .HasColumnType("int");

                            b1.Property<string>("OperationType")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("StatType")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("ActivateCollectionId");

                            b1.ToTable("CollectionOptionModel");

                            b1.WithOwner()
                                .HasForeignKey("ActivateCollectionId");
                        });

                    b.Navigation("Avatar");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossChallengeModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossClaimRewardModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossRushModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossSeasonModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "RaffleWinner")
                        .WithMany()
                        .HasForeignKey("RaffleWinnerAddress");

                    b.Navigation("RaffleWinner");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossUnlockFloorModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AdventureBoss.AdventureBossWantedModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AuraSummonFailModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AuraSummonModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AvatarModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleGrandFinaleModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ClaimStakeRewardModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationConsumableModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationEquipmentModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.CustomEquipmentCraftModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.RapidCombinationModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Crafting.UnlockCombinationSlotModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventConsumableItemCraftsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventDungeonBattleModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EventMaterialItemCraftsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.Grinding.GrindingModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashSweepModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasRandomBuffModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasWithRandomBuffModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementFailModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.JoinArenaModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.MigrateMonsterCollectionModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.PetEnhancementModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ReplaceCombinationEquipmentMaterialModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneEnhancementModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RunesAcquiredModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneSummonFailModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.RuneSummonModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StakeModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockEquipmentRecipeModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockRuneSlotModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockWorldModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserConsumablesModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserCostumesModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserCrystalsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserMaterialsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserMonsterCollectionsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserNCGsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserRunesModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UserStakingsModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AvatarModel", b =>
                {
                    b.Navigation("ActivateCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
